---
export const prerender = false;

import type { Build, Platform } from "@lib/replay-api.ts";

import * as Consts from "src/constants.ts";

import LayoutReleases from "@layouts/LayoutReleases.astro";
import CoreBuild from "@components/builds/CoreBuild.astro";
import CoreCard from "@components/builds/CoreCard.astro";

const { platform, core } = Astro.params;
  
const platforms: Array<Platform> = await (
  await fetch(`${Consts.BASE_URL_REPLAY_API}/platforms/`)
  ).json();
    
const builds: Array<Build> = await (
  await fetch(
    `${Consts.BASE_URL_REPLAY_API}/builds?platforms=${platform}&buildType=core&cores=${core}&desc=true`
  )
).json();

Astro.response.headers.set('CDN-Cache-Control', 'public, s-maxage=3600, stale-while-revalidate=86400');
---

<LayoutReleases
  title="Core Releases"
  platforms={platforms}
  selectedPlatform={platform}
>
  <CoreCard core={builds[0]} showDetails={false} platform={platform} />

  {builds.map((build) => <CoreBuild core={build} />)}
</LayoutReleases>
