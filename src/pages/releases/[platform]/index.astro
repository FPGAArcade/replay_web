---
export const prerender = false;

import type { InferGetStaticPropsType, GetStaticPaths } from "astro";
import type { Platform } from "@lib/replay-api.ts";

import * as Consts from "src/constants";
import LayoutReleases from "@layouts/LayoutReleases.astro";

import PlatformView from "@components/builds/PlatformView.astro";

// Static render version - Left for now whilst testing SSR 
// export const getStaticPaths = (async () => {
//   const res = await fetch(`${Consts.BASE_URL_REPLAY_API}/platforms/`);
//   const platforms: Array<Platform> = await res.json();

//    return platforms.map(platform => ({params: {platform: platform.id}, props: {platforms: platforms}}))
// }) satisfies GetStaticPaths;

// pre-render false testing
const res = await fetch(`${Consts.BASE_URL_REPLAY_API}/platforms/`);
const platforms: Array<Platform> = await res.json();

// type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { platform } = Astro.params;

Astro.response.headers.set('Cache-Control', 'public, maxage=360, s-maxage=3600, stale-while-revalidate=86400');
---

<LayoutReleases title="Core Releases" platforms={platforms} selectedPlatform={platform}>
  <PlatformView platform={platform}></PlatformView>
</LayoutReleases>
