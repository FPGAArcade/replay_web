---
import headerLogo from "../assets/header-logo.png";
import { GithubIcon, XIcon } from "vue3-simple-icons";

import { Image } from "astro:assets";
---

<header>
  <a href="/"><Image src={headerLogo} alt="FPGA Arcade Logo" /></a>

  <button class="menu-btn" data-nav-open="false">
    <span></span>
    <span></span>
    <span></span>
  </button>
  <nav class="nav" data-nav data-nav-open="false" data-nav-animating="false">
    <ul class="nav__list">
      <li><a href="/">Hardware</a></li>
      <li><a href="/blog/">Blog</a></li>
      <li><a href="https://docs.fpgaarcade.com/">Docs</a></li>
      <li><a href="https://build.fpgaarcade.com/releases">Releases</a></li>
      <li>
        <a href="https://github.com/FPGAArcade/">
          <GithubIcon title="FPGAArcade GitHub" style="fill: white;" />
        </a>
        <a href="https://twitter.com/FPGAArcade">
          <XIcon title="FPGAArcade Twitter" style="fill: white;" />
        </a>
      </li>
    </ul>
  </nav>
</header>

<style>
  header {
    --rpl-link-color: var(--rpl-header-text-color);

    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1em;

    padding: 0.5rem 1.5rem;
    height: 46px;

    overflow: hidden;
    background-color: var(--rpl-header-background-color);
    color: var(--rpl-header-text-color);
  }

  header a,
  header img {
    height: 100%;
  }
  header img {
    object-fit: contain;
    object-position: left;
  }

  .nav {
    display: flex;
    position: fixed;
    z-index: 100;
    inset: 0 0 0 30%;

    /* Fallback for readability on older browsers */
    @supports (
      background:
        color-mix(in srgb, var(--rpl-header-background-color) 85%, transparent)
    ) {
      --background-color: color-mix(
        in srgb,
        var(--rpl-header-background-color) 85%,
        transparent
      );
    }
    background: var(--background-color, var(--rpl-header-background-color));
    backdrop-filter: blur(5px);

    transform: translateX(100%);
  }

  .nav[data-nav-open="true"] {
    transform: translateX(0%);
  }

  .nav[data-nav-animating="true"] {
    transition: transform 0.25s ease-out;
  }

  .nav__list {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    align-items: center;

    margin: 0;
    padding: 4rem 0;
    gap: 1.5em;

    list-style-type: none;
  }

  .menu-btn {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    justify-content: space-between;
    align-content: space-between;
    overflow: hidden;

    cursor: pointer;
    z-index: 999;
    border: none;
    background: none;
    color: white;
    width: 28px;
    height: 23px;
  }

  .menu-btn > span {
    width: 25px;
    height: 3px;
    background-color: white;
    transform-origin: center left;
    transition: transform 0.3s ease, scale 0.3s ease;
  }

  .menu-btn[data-nav-open="true"] > span:first-child {
    transform: rotateZ(45deg);
  }

  .menu-btn[data-nav-open="true"] > span:nth-child(2) {
    transform: scaleX(0);
  }

  .menu-btn[data-nav-open="true"] > span:last-child {
    transform: rotateZ(-45deg);
  }

  a:hover {
      text-decoration: none;
  }

  a:after {
      content: "";
      position: absolute;
      width: 100%;
      height: 2px;
      bottom: 0;
      left: 0;
      background-color: var(--rpl-link-underline-color);

      transform: scaleX(0);
      transition: transform 0.3s ease-out;
  }

  a:hover::after {
      transform: scaleX(1);
  }

  @media (min-width: 40em) {
    .nav {
      position: static;
      border: none;
      z-index: auto;
      transform: none;
    }

    .nav__list {
      display: flex;
      flex-direction: row;
      padding: 0;
    }

    .menu-btn {
      display: none;
    }
  }
</style>

<script>
  const nav = document.querySelector("[data-nav]");
  const menuBtn = document.querySelector(".menu-btn");

  if (nav instanceof HTMLElement && menuBtn instanceof HTMLElement) {
    menuBtn.addEventListener("click", (event) => {
      nav.dataset.navOpen = nav.dataset.navOpen === "true" ? "false" : "true";
      nav.dataset.navAnimating = "true";
      menuBtn.dataset.navOpen = nav.dataset.navOpen;

      event.stopPropagation();
    });

    document.body.addEventListener("click", (event) => {
      if (!(event.target instanceof Element) || nav.contains(event.target))
        return;

      nav.dataset.navOpen = "false";
      nav.dataset.navAnimating = "true";
      menuBtn.dataset.navOpen = "false";
    });

    // Avoid close transform triggering when resizing desktop to mobile
    nav.addEventListener("transitionend", (event) => {
      if (!(nav instanceof HTMLElement) || event.target !== nav) return;

      nav.dataset.navAnimating = "false";
    });

    nav.addEventListener("transitioncancel", (event) => {
      if (!(nav instanceof HTMLElement) || event.target !== nav) return;

      nav.dataset.navAnimating = "false";
    });
  }
</script>
