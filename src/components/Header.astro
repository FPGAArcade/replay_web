---
import headerLogo from "../assets/header-logo.png";
import { GithubIcon } from "vue3-simple-icons";
import MenuIcon from "vue-material-design-icons/Menu.vue";
import MenuClose from "vue-material-design-icons/Close.vue";

import { Image } from "astro:assets";
---

<header>
  <Image src={headerLogo} alt="FPGA Arcade Logo" />

  <button class="menu-btn" data-nav-toggle-btn>
    <MenuIcon class="icon" data-hidden="false" />
    <MenuClose class="icon" data-hidden="true" />
  </button>
  <nav class="nav" data-nav data-nav-open="false" data-nav-animating="false">
    <ul class="nav__list">
      <li><a href="/">Hardware</a></li>
      <li><a href="/demo">News</a></li>
      <li>FAQ</li>
      <li><a href="https://docs.fpgaarcade.com/">Docs</a></li>
      <li><a href="https://build.fpgaarcade.com/releases">Releases</a></li>
      <li>
        <a href="https://github.com/FPGAArcade/"
          ><GithubIcon title="FPGAArcade GitHub" style="fill: white;" /></a
        >
      </li>
    </ul>
  </nav>
</header>

<style>
  header {
    --rpl-link-color: var(--rpl-header-text-color);

    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1em;

    padding: 0.5em;
    height: 46px;

    overflow: hidden;
    background-color: var(--rpl-header-background-color);
    color: var(--rpl-header-text-color);
  }

  header > img {
    object-fit: contain;
    object-position: left;
    height: 100%;
  }

  .nav {
    display: flex;
    position: fixed;
    z-index: 100;
    inset: 0 0 0 30%;

    /* Fallback for readability on older browsers */
    @supports (
      background:
        color-mix(in srgb, var(--rpl-header-background-color) 85%, transparent)
    ) {
      --background-color: color-mix(
        in srgb,
        var(--rpl-header-background-color) 85%,
        transparent
      );
    }
    background: var(--background-color, var(--rpl-header-background-color));
    backdrop-filter: blur(5px);

    transform: translateX(100%);
  }

  .nav[data-nav-open="true"] {
    transform: translateX(0%);
  }

  .nav[data-nav-animating="true"] {
    transition: transform 0.25s ease-out;
  }

  .nav__list {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    align-items: center;

    margin: 0;
    padding: 4rem 0;
    gap: 1.5em;

    list-style-type: none;
  }

  .menu-btn {
    display: block;
    position: sticky;
    z-index: 999;
    border: 0;
    background: none;
    color: white;
    width: 24px;
    height: 24px;
  }

  .menu-btn .icon {
    position: absolute;
    left: 0;
    top: 0;
    transition: opacity 0.25s ease-in-out;
  }

  .menu-btn .icon[data-hidden="true"] {
    opacity: 0;
  }

  @media (min-width: 40em) {
    .nav {
      position: static;
      border: none;
      z-index: auto;
      transform: none;
    }

    .nav__list {
      display: flex;
      flex-direction: row;
      padding: 0;
    }

    .menu-btn {
      display: none;
    }
  }
</style>

<script>
  const nav = document.querySelector("[data-nav]");
  const menuBtn = document.querySelector("[data-nav-toggle-btn]");
  const menuIcons = document.querySelectorAll(".menu-btn [data-hidden]");

  menuBtn?.addEventListener("click", () => {
    if (!(nav instanceof HTMLElement)) return;

    nav.dataset.navOpen = nav.dataset.navOpen === "true" ? "false" : "true";
    nav.dataset.navAnimating = "true";

    menuIcons.forEach((el) => {
      if (!(el instanceof HTMLElement)) return;
      el.dataset.hidden = el.dataset.hidden === "true" ? "false" : "true";
    });
  });

  // Avoid close transform triggering when resizing desktop to mobile
  nav?.addEventListener("transitionend", (event) => {
    if (!(nav instanceof HTMLElement) || event.target !== nav) return;

    nav.dataset.navAnimating = "false";
  });
  nav?.addEventListener("transitioncancel", (event) => {
    if (!(nav instanceof HTMLElement) || event.target !== nav) return;

    nav.dataset.navAnimating = "false";
  });
</script>
